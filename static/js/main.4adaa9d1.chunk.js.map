{"version":3,"sources":["App.tsx","components/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","good","goodsFromServer","App","useState","isReversed","setisReversed","NONE","sortType","setSortType","visibleGoods","sort","el1","el2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isOriginalOrder","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mECbQC,EAA+B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,SDLFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAzBD,YAAsE,IAAzCF,EAAwC,EAAxCA,SAAUH,EAA8B,EAA9BA,WACtCK,EAAY,UAAOR,GAezB,OAbAQ,EAAaC,MAAK,SAACC,EAAKC,GACtB,OAAQL,GACN,KAAKX,EAASiB,SACZ,OAAOF,EAAIG,cAAcF,GAE3B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAIK,OAASJ,EAAII,OAE1B,QACE,OAAO,MAINZ,EACHK,EAAaQ,UACbR,EAOiBS,CAAkB,CAAEX,WAAUH,eAE7Ce,EAAmBZ,IAAaX,EAASU,OAAUF,EAazD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAAE,WAAYf,IAAaX,EAASiB,WAExDU,QAnBe,kBAAMf,EAAYZ,EAASiB,WAc5C,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBAAqB,CAAE,WAAYf,IAAaX,EAASmB,SAE3DQ,QA3Ba,kBAAMf,EAAYZ,EAASmB,SAsB1C,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBAAqB,CAAE,YAAalB,IAEtCmB,QAnCY,kBAAMlB,GAAeD,IA8BnC,sBAUEe,GACA,wBACEE,KAAK,SACLD,UAAWE,IACT,mBAAoB,CAAE,WAAYH,IAEpCI,QA5CI,WACZlB,GAAc,GACdG,EAAYZ,EAASU,OAqCf,sBAYJ,cAAC,EAAD,CAAaR,MAAOW,QEjH1Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4adaa9d1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ListOfGoods } from './components/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods({ sortType, isReversed }: ReorderOptions) {\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((el1, el2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return el1.localeCompare(el2);\n\n      case SortType.LENGTH:\n        return el1.length - el2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setisReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods({ sortType, isReversed });\n\n  const isOriginalOrder = (sortType === SortType.NONE) && !isReversed;\n\n  const sortByALPHABET = () => setSortType(SortType.ALPHABET);\n\n  const sortByLength = () => setSortType(SortType.LENGTH);\n\n  const reverseList = () => setisReversed(!isReversed);\n\n  const reset = () => {\n    setisReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByALPHABET}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', { 'is-light': !isReversed },\n          )}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        {!isOriginalOrder && (\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-danger', { 'is-light': isOriginalOrder },\n            )}\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ListOfGoods goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good}\n          data-cy=\"Good\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}